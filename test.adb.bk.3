WITH Ada.Integer_Text_Io, Ada.Text_io, pile1,file1;
USE Ada.Integer_Text_io, Ada.Text_io;

PROCEDURE test_pile IS

--------------------------------------------------------------------------------------
-----------------------Déclaration des types------------------------------------------
--------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------
------------------------Déclaration des sous programmes-------------------------------
--------------------------------------------------------------------------------------

PROCEDURE Affichage (i: IN integer) IS
BEGIN

   put(i,1);new_line;

END Affichage;

--------------------------------------------------------------------------------------
------------------------Déclaration des variables-------------------------------------
--------------------------------------------------------------------------------------

PACKAGE pile_tab IS NEW pile1(integer,10,Affichage);
USE pile_tab;

p:pile;


--------------------------------------------------------------------------------------
----------------------------Programme principal---------------------------------------
--------------------------------------------------------------------------------------

BEGIN

n:=1;

   put("======================================");new_line;
   put("==           Test des piles         ==");new_line;
   put("======================================");new_line;


-- Initialisation d'une pile

   InitPile(p);

--Affichage(LirePile(p));
-- index check failed


-- Empile 3 sur la pile
   Empiler(p,3);

-- Affiche normalement 3
   Affichage(LirePile(p));

-- Empile 4 puis depile

   Empiler(p,4);
   Depiler(p);

-- Affiche normalement 3s
   Affichage(LirePile(p));

-- On vérifie que la pile marche

   Empiler(p,4);
   Empiler(p,5);
   Empiler(p,6);
   Empiler(p,7);
   Empiler(p,8);

   FOR i IN 1..6 LOOP
      Affichage(LirePile(p));
      Depiler(p);
   END LOOP;


-- La pile est normalement vide

   IF PileVide(p) THEN
      put("La pile est bien vide");new_line;
   END IF;

   IF NOT PilePleine(p) THEN
      put("La pile n'est pas pleine");new_line;
   END IF;

-- On peut donc faire ça :

   WHILE NOT PilePleine(p) LOOP
      Empiler(p,1);
   END LOOP;

   IF PilePleine(p) THEN
      put("La pile est pleine");new_line;
   END IF;

   new_line;put("Affichage d'une pile de 1");new_line;

   WHILE NOT PileVide(p) LOOP
      Affichage(LirePile(p));
      Depiler(p);
   END LOOP;

put("Fin des tests");new_line;


END;